server:
  port: ${DEV_SERVER_PORT}

spring:
  config:
    import: "optional:file:.env.dev[.properties]"
  datasource:
    url: jdbc:mysql://${DEV_DB_HOST}:${DEV_DB_PORT}/${DEV_DB_NAME}?serverTimezone=Asia/Seoul&useSSL=false&tinyInt1isBit=false&allowPublicKeyRetrieval=true
    username: ${DEV_DB_USER}
    password: ${DEV_DB_PASS}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
    open-in-view: false
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            scope:
              - profile_nickname
              - profile_image
              - account_email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

aws:
  s3:
    region: ${S3_PLACE}
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
    url: ${S3_URL}
    bucket-name: ${S3_BUCKET_NAME}

logging:
  level:
    com.sparta.gathering: INFO

jwt:
  secret: ${JWT_SECRET_KEY}
  expiration: ${JWT_EXPIRATION_TIME}

default:
  profile:
    image:
      url: ${DEFAULT_PROFILE_IMAGE_URL}

kakao:
  map:
    api-key: ${KAKAO_MAP_REST_API}