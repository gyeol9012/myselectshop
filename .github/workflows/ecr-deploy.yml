name: Deploy to ECR

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때마다 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 코드를 체크아웃합니다.
      - name: Check out the code
        uses: actions/checkout@v4

      # Java 17 버전 설정
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      # AWS CLI를 사용하여 ECR에 로그인
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ap-northeast-2

      # IMAGE_TAG 설정 및 확인
      - name: Set IMAGE_TAG
        id: image_tag
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          if [ -z "$IMAGE_TAG" ]; then IMAGE_TAG="latest"; fi
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "Using IMAGE_TAG: $IMAGE_TAG"

      # Docker 이미지를 빌드하고 ECR에 푸시
      - name: Build, tag, and push Docker image
        env:
          AWS_REGION: ap-northeast-2
          ECR_REPOSITORY: 435944164288.dkr.ecr.ap-northeast-2.amazonaws.com/gathering-21
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REPOSITORY:$IMAGE_TAG

      # 'latest' 태그로도 푸시
      - name: Tag and push as 'latest'
        env:
          ECR_REPOSITORY: 435944164288.dkr.ecr.ap-northeast-2.amazonaws.com/gathering-21
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REPOSITORY:latest
          docker push $ECR_REPOSITORY:latest